# personal details

[user]
	email = luhmann@users.noreply.github.com
	name = Jan Florian Dietrich

[credential]
	helper = osxkeychain

[alias]
	# add
	a = add
	# checkout
	co = checkout
	# checkout usual branches
	master = checkout master
	# checkout branch, creating it if necessary
	go = checkout -B
	# commit
	c = commit
	# commit all changes
	ca = !git add -A && git commit -av
	# credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"
	# diff
	d = diff
	# diff: `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"
	# log
	l = log
	# pull
	pl = pull
	# pull including all submodules
	ppl = !"git pull; git submodule foreach git pull origin master"
	# push
	ps = push
	# undo push
	undopush = push -f origin HEAD^:master
	# status
	s = status
	# show verbose output about tags, branches or remotes
	tags = tag -l
	branches = branch -a
	remotes = remote -v
	# Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"

	pr = '!zsh -ic open-pr'
	trav = '!zsh -ic git-trav'

	count   = !git shortlog -sn
	switch = !legit switch \"$@\"
	branches = !legit branches
	sprout = !legit sprout \"$@\"
	unpublish = !legit unpublish \"$@\"
	harvest = !legit harvest \"$@\"
	sync = !legit sync \"$@\"
	publish = !legit publish \"$@\"
	graft = !legit graft \"$@\"

[apply]
	# detect whitespace errors when applying a patch
	whitespace = warn
	editor = vim

[core]
	excludesfile = ~/.gitignore
	# treat spaces before tabs, lines that are indented with 8 or more spaces, and all kinds of trailing whitespace as an error
	whitespace = space-before-tab,indent-with-non-tab,trailing-space

[color]
	ui = auto
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "diff"]
	meta = yellow
	frag = white
	old = red
	new = green
	plain = white dim
[color "status"]
	added = green
	changed = blue
	untracked = red

[merge]
	# include summaries of merged commits in newly created merge commit messages
	log = true

# always use `origin` as the default remote on the `master` branch
[branch "master"]
	remote = origin
	merge = refs/heads/master

[remote "origin"]
	push = HEAD
#[https]
#	proxy = http://proxy.inf.epost-dev.de:8080
#[http]
# 	proxy = http://proxy.inf.epost-dev.de:8080

[push]
	default = simple
[mergetool "Kaleidoscope"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
	trustexitcode = true
[difftool "Kaleidoscope"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool]
	prompt = false
[mergetool]
	prompt = false
[diff]
	tool = Kaleidoscope
